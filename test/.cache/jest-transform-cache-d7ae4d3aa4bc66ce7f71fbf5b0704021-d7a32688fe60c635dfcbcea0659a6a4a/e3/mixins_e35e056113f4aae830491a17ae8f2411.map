{"version":3,"sources":["mixins.js"],"names":["rem","number","tmp","indexOf","replace","parseFloat","subtract1Px","setSizes","sizes","n","forEach","k","conflictColor","bgColor","color","charAt","substring","r","parseInt","g","b","uicolors","c","map","col","L","calcSize","size","gradient","direction","list","hex","i","length","checkTheme","props","p","themeColor","bg","positionArrow","sTarget","sPop","fontWeight","Weight","getResponsiveImage","url","path","split"],"mappings":";;;;;AAAA;AACA;;AAEA,IAAMA,MAAM,SAANA,GAAM,CAACC,MAAD,EAAY;AACtB,MAAIC,MAAO,OAAQD,MAAR,KAAoB,QAApB,IAAgCA,OAAOE,OAAP,CAAe,IAAf,CAAjC,GAAyDF,OAAOG,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAzD,GAAoFH,MAA9F;AACAC,QAAMG,WAAWH,GAAX,CAAN;;AAEA,SAAUA,MAAM,EAAhB;AACD,CALD;;AAOA,IAAMI,cAAc,SAAdA,WAAc,CAACL,MAAD,EAAY;AAC9B,MAAIC,MAAO,OAAQD,MAAR,KAAoB,QAApB,IAAgCA,OAAOE,OAAP,CAAe,IAAf,CAAjC,GAAyDF,OAAOG,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAzD,GAAoFH,MAA9F;AACAC,QAAMG,WAAWH,GAAX,CAAN;;AAEA,SAAUA,MAAM,CAAhB;AACD,CALD;;AAOA,IAAMK,WAAW,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,MAAIC,IAAI,EAAR;AACA,MAAI,OAAQD,KAAR,KAAmB,QAAvB,EAAiC;AAC/BC,SAAQD,KAAR;AACD,GAFD,MAEO;AACLA,UAAME,OAAN,CAAc,UAACC,CAAD,EAAO;AACnBF,iBAASE,CAAT;AACD,KAFD;AAGD;AACD,SAAOF,CAAP;AACD,CAVD;;AAYA,IAAMG,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACjC,MAAMC,QAASD,QAAQE,MAAR,CAAe,CAAf,MAAsB,GAAvB,GAA8BF,QAAQG,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAA9B,GAAwDH,OAAtE;AACA,MAAMI,IAAIC,SAASJ,MAAME,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAV,CAFiC,CAEc;AAC/C,MAAMG,IAAID,SAASJ,MAAME,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAV,CAHiC,CAGc;AAC/C,MAAMI,IAAIF,SAASJ,MAAME,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAV,CAJiC,CAIc;AAC/C,MAAMK,WAAW,CAACJ,IAAI,GAAL,EAAUE,IAAI,GAAd,EAAmBC,IAAI,GAAvB,CAAjB;AACA,MAAME,IAAID,SAASE,GAAT,CAAa,UAACC,GAAD,EAAS;AAC9B,QAAIA,OAAO,OAAX,EAAoB;AAClB,aAAOA,MAAM,KAAb;AACD;AACD,oBAAQ,CAACA,MAAM,KAAP,IAAgB,KAAxB,EAAkC,GAAlC;AACD,GALS,CAAV;AAMA,MAAMC,IAAK,SAASH,EAAE,CAAF,CAAV,GAAmB,SAASA,EAAE,CAAF,CAA5B,GAAqC,SAASA,EAAE,CAAF,CAAxD;AACA,SAAQG,IAAI,KAAL,GAAc,MAAd,GAAuB,MAA9B;AACD,CAdD;;AAgBA,IAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,UAAQA,IAAR;AACE,SAAK,CAAC,CAAN;AACE,aAAO3B,IAAI,EAAJ,CAAP;AACF,SAAK,CAAC,CAAN;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AACF;AACA,SAAK,CAAL;AACE,aAAOA,IAAI,EAAJ,CAAP;AAjBJ;AAmBD,CApBD;;AAsBA,IAAM4B,WAAW,SAAXA,QAAW,CAACC,SAAD,EAAYC,IAAZ,EAAqB;AACpC,MAAIC,MAASF,SAAT,OAAJ;AACAC,OAAKpB,OAAL,CAAa,UAACC,CAAD,EAAIqB,CAAJ,EAAU;AACrBD,WAAOpB,CAAP;AACA,QAAIqB,MAAMF,KAAKG,MAAL,GAAc,CAAxB,EAA2B;AACzBF,aAAO,IAAP;AACD;AACF,GALD;AAMA,SAAOA,GAAP;AACD,CATD;;AAWA,IAAMG,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,MAAMC,IAAID,MAAME,UAAN,GAAmB,CAAnB,GAAuBF,MAAMG,EAAvC;AACA,SAAOF,CAAP;AACD,CAHD;;AAKA,IAAMG,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,IAAV;AAAA,SAAmBD,UAAUC,IAA7B;AAAA,CAAtB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC7B,UAAQA,MAAR;AACE,SAAK,SAAL;AACE,aAAO,KAAP;AACF,SAAK,QAAL;AACE,aAAO,KAAP;AACF,SAAK,MAAL;AACE,aAAO,KAAP;AACF;AACA,SAAK,OAAL;AACE,aAAO,KAAP;AATJ;AAWD,CAZD;AAaA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,GAAD,EAAMlB,IAAN,EAAe;AACxC,MAAMmB,OAAOD,IAAIE,KAAJ,CAAU,GAAV,CAAb;AACA,SAAUD,KAAK,CAAL,IAAUnB,IAApB,SAA4BmB,KAAK,CAAL,CAA5B;AACD,CAHD;;QAME9C,G,GAAAA,G;QACAM,W,GAAAA,W;QACAC,Q,GAAAA,Q;QACAqB,Q,GAAAA,Q;QACAM,U,GAAAA,U;QACAK,a,GAAAA,a;QACAb,Q,GAAAA,Q;QACAgB,U,GAAAA,U;QACAE,kB,GAAAA,kB;QACAhC,a,GAAAA,a","file":"mixins.js","sourcesContent":["// import * as vars from './variables';\n// const breakpoint = vars.breakpoint;\n\nconst rem = (number) => {\n  let tmp = (typeof (number) === 'string' && number.indexOf('px')) ? number.replace('px', '') : number;\n  tmp = parseFloat(tmp);\n\n  return `${tmp / 16}rem`;\n};\n\nconst subtract1Px = (number) => {\n  let tmp = (typeof (number) === 'string' && number.indexOf('px')) ? number.replace('px', '') : number;\n  tmp = parseFloat(tmp);\n\n  return `${tmp - 1}px`;\n};\n\nconst setSizes = (sizes) => {\n  let n = '';\n  if (typeof (sizes) === 'number') {\n    n += `${sizes}px`;\n  } else {\n    sizes.forEach((k) => {\n      n += ` ${k}px`;\n    });\n  }\n  return n;\n};\n\nconst conflictColor = (bgColor) => {\n  const color = (bgColor.charAt(0) === '#') ? bgColor.substring(1, 7) : bgColor;\n  const r = parseInt(color.substring(0, 2), 16); // hexToR\n  const g = parseInt(color.substring(2, 4), 16); // hexToG\n  const b = parseInt(color.substring(4, 6), 16); // hexToB\n  const uicolors = [r / 255, g / 255, b / 255];\n  const c = uicolors.map((col) => {\n    if (col <= 0.03928) {\n      return col / 12.92;\n    }\n    return ((col + 0.055) / 1.055) ** 2.4;\n  });\n  const L = (0.2126 * c[0]) + (0.7152 * c[1]) + (0.0722 * c[2]);\n  return (L > 0.179) ? '#000' : '#FFF';\n};\n\nconst calcSize = (size) => {\n  switch (size) {\n    case -2:\n      return rem(12);\n    case -1:\n      return rem(14);\n    case 2:\n      return rem(18);\n    case 3:\n      return rem(24);\n    case 4:\n      return rem(30);\n    case 5:\n      return rem(40);\n    case 6:\n      return rem(54);\n    default:\n    case 1:\n      return rem(16);\n  }\n};\n\nconst gradient = (direction, list) => {\n  let hex = `${direction}, `;\n  list.forEach((k, i) => {\n    hex += k;\n    if (i !== list.length - 1) {\n      hex += ', ';\n    }\n  });\n  return hex;\n};\n\nconst checkTheme = (props) => {\n  const p = props.themeColor ? 0 : props.bg;\n  return p;\n};\n\nconst positionArrow = (sTarget, sPop) => sTarget < sPop;\n\nconst fontWeight = (Weight) => {\n  switch (Weight) {\n    case 'Regular':\n      return '400';\n    case 'Medium':\n      return '600';\n    case 'Bold':\n      return '700';\n    default:\n    case 'Light':\n      return '300';\n  }\n};\nconst getResponsiveImage = (url, size) => {\n  const path = url.split('.');\n  return `${path[0] + size}.${path[1]}`;\n};\n\nexport {\n  rem,\n  subtract1Px,\n  setSizes,\n  gradient,\n  checkTheme,\n  positionArrow,\n  calcSize,\n  fontWeight,\n  getResponsiveImage,\n  conflictColor\n};\n"]}