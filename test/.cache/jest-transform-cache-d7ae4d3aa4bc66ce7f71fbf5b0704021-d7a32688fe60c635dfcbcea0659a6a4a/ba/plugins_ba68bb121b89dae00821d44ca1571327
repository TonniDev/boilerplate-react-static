7168082a5244789313b759779a1695f0
'use strict';

var path = require('path');
var webpack = require('webpack');
var StaticSiteGeneratorPlugin = require('static-site-generator-webpack-plugin');
var BrowserSyncPlugin = require('browser-sync-webpack-plugin');
var CleanWebpackPlugin = require('clean-webpack-plugin');
var CopyWebpackPlugin = require('copy-webpack-plugin');

var _require = require('webpack-bundle-analyzer'),
    BundleAnalyzerPlugin = _require.BundleAnalyzerPlugin;

var ss = require('../../src/__static__/ss_routes');

var outputDir = process.env.OUTPUT;

var copyPlugin = function copyPlugin() {
  var copyHTML = [{
    from: process.env.ROOT_PATH + 'src/assets/',
    to: process.env.ROOT_PATH + 'assets/'
  }];
  if (process.env.OUTPUT === 'standard') {
    copyHTML = copyHTML.concat({
      from: process.env.ROOT_PATH + 'src/__' + outputDir + '__/index.html',
      to: '' + process.env.ROOT_PATH
    });
  }
  return copyHTML;
};

var ifDev = function ifDev(arr) {
  var plugins = arr;
  if (process.env.OUTPUT === 'static') {
    var StaticSiteGenerator = new StaticSiteGeneratorPlugin({
      entry: 'main',
      paths: ss.routes
    });
    plugins.splice(2, 0, StaticSiteGenerator);
  }
  if (process.env.NODE_ENV === 'production') {
    var UglyJS = new webpack.optimize.UglifyJsPlugin({
      minimize: true,
      comments: false, // remove comments
      compress: {
        warnings: false, // Suppress uglification warnings
        pure_getters: true,
        conditionals: true,
        sequences: true,
        dead_code: true,
        booleans: true,
        unused: true,
        if_return: true,
        join_vars: true,
        drop_console: true
      },
      mangle: true,
      sourceMap: true, /* fix issue on uglify */
      output: { comments: false }
    });
    var IgnorePlugin = new webpack.IgnorePlugin(/^\.\/locale$/, [/moment$/]);
    var NameModules = new webpack.NamedModulesPlugin();
    var NoEmit = new webpack.NoEmitOnErrorsPlugin();

    plugins.splice(2, 0, UglyJS);
    plugins = plugins.concat(IgnorePlugin, NameModules, NoEmit);
  }
  if (process.env.NODE_ENV === 'development') {
    var BrowserSync = new BrowserSyncPlugin({
      host: 'localhost',
      port: process.env.PORT || 8080,
      server: {
        baseDir: [outputDir + '_build']
      }
    });
    var BundleAnalyser = new BundleAnalyzerPlugin();
    plugins = plugins.concat(BrowserSync, BundleAnalyser);
  }
  return plugins;
};

var initialPlugins = [new CleanWebpackPlugin([outputDir + '_build'], {
  root: path.resolve(__dirname, '../../')
}), new CopyWebpackPlugin(copyPlugin()), new webpack.optimize.AggressiveMergingPlugin({
  minSizeReduce: 1.5,
  moveToParents: true
}), new webpack.optimize.ModuleConcatenationPlugin()];

module.exports = ifDev(initialPlugins);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,