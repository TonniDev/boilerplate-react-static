{"version":3,"sources":["index.js"],"names":["store"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AACA;;AAEA,IAAMA,QAAQ,4CAEZ,iDAAoB,gEAApB,CAFY,CAAd;;kBAKeA,K;;AAEf","file":"index.js","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport apiMiddleware from '../middleware/api';\nimport rootReducer from '../reducers';\n// import DevTools from '../containers/DevTools';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(apiMiddleware, thunkMiddleware))\n);\n\nexport default store;\n\n/** TODO: DevTools in static projects\nfunction getDebugSessionKey() {\n  const matches = window.location.href.match(/[?&]debug_session=([^&]+)\\b/);\n  return (matches && matches.length > 0) ? matches[1] : null;\n}\n\nconst enhancer = composeWithDevTools(\n  applyMiddleware(apiMiddleware, thunkMiddleware),\n  DevTools.instrument()\n);\n\nexport default function store(initialState) {\n  const configureStore = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept('../reducers', () => configureStore.replaceReducer(require('../reducers').default));\n  }\n\n  return configureStore;\n}\n*/\n"]}