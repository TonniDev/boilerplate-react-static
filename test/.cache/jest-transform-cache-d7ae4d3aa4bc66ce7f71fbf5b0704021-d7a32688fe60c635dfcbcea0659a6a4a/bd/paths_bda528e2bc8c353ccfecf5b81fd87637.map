{"version":3,"sources":["paths.js"],"names":["path","require","fs","appDirectory","realpathSync","process","cwd","resolveApp","relativePath","resolve","nodePaths","env","NODE_PATH","split","platform","filter","Boolean","map","module","exports","appBuild","appPublic","appHtml","appIndexJs","appPackageJson","appSrc","testsSetup","appNodeModules","ownNodeModules","__dirname","indexOf","join","resolveOwn"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEA;AACA;AACA,IAAME,eAAeD,GAAGE,YAAH,CAAgBC,QAAQC,GAAR,EAAhB,CAArB;AACA,SAASC,UAAT,CAAoBC,YAApB,EAAkC;AAChC,SAAOR,KAAKS,OAAL,CAAaN,YAAb,EAA2BK,YAA3B,CAAP;AACD;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,IAAME,YAAY,CAACL,QAAQM,GAAR,CAAYC,SAAZ,IAAyB,EAA1B,EACfC,KADe,CACTR,QAAQS,QAAR,KAAqB,OAArB,GAA+B,GAA/B,GAAqC,GAD5B,EAEfC,MAFe,CAERC,OAFQ,EAGfC,GAHe,CAGXV,UAHW,CAAlB;;AAKA;AACAW,OAAOC,OAAP,GAAiB;AACfC,YAAUb,WAAW,OAAX,CADK;AAEfc,aAAWd,WAAW,QAAX,CAFI;AAGfe,WAASf,WAAW,mBAAX,CAHM;AAIfgB,cAAYhB,WAAW,cAAX,CAJG;AAKfiB,kBAAgBjB,WAAW,cAAX,CALD;AAMfkB,UAAQlB,WAAW,KAAX,CANO;AAOfmB,cAAYnB,WAAW,mBAAX,CAPG;AAQfoB,kBAAgBpB,WAAW,cAAX,CARD;AASfqB,kBAAgBrB,WAAW,cAAX,CATD;AAUfG;AAVe,CAAjB;;AAcA;AACA,IAAImB,UAAUC,OAAV,CAAkB9B,KAAK+B,IAAL,CAAU,UAAV,EAAsB,eAAtB,EAAuC,QAAvC,CAAlB,MAAwE,CAAC,CAA7E,EAAgF;AAC9Eb,SAAOC,OAAP,GAAiB;AACfC,cAAUY,WAAW,gBAAX,CADK;AAEfX,eAAWW,WAAW,oBAAX,CAFI;AAGfV,aAASU,WAAW,+BAAX,CAHM;AAIfT,gBAAYS,WAAW,0BAAX,CAJG;AAKfR,oBAAgBQ,WAAW,iBAAX,CALD;AAMfP,YAAQO,WAAW,iBAAX,CANO;AAOfN,gBAAYM,WAAW,+BAAX,CAPG;AAQfL,oBAAgBK,WAAW,iBAAX,CARD;AASfJ,oBAAgBI,WAAW,iBAAX,CATD;AAUftB;AAVe,GAAjB;AAYD","file":"paths.js","sourcesContent":["const path = require('path');\nconst fs = require('fs');\n\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\nconst appDirectory = fs.realpathSync(process.cwd());\nfunction resolveApp(relativePath) {\n  return path.resolve(appDirectory, relativePath);\n}\n\n// We support resolving modules according to `NODE_PATH`.\n// This lets you use absolute paths in imports inside large monorepos:\n// https://github.com/facebookincubator/create-react-app/issues/253.\n\n// It works similar to `NODE_PATH` in Node itself:\n// https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders\n\n// We will export `nodePaths` as an array of absolute paths.\n// It will then be used by Webpack configs.\n// Jest doesnâ€™t need this because it already handles `NODE_PATH` out of the box.\n\nconst nodePaths = (process.env.NODE_PATH || '')\n  .split(process.platform === 'win32' ? ';' : ':')\n  .filter(Boolean)\n  .map(resolveApp);\n\n// config after eject: we're in ./config/\nmodule.exports = {\n  appBuild: resolveApp('build'),\n  appPublic: resolveApp('public'),\n  appHtml: resolveApp('public/index.html'),\n  appIndexJs: resolveApp('src/index.js'),\n  appPackageJson: resolveApp('package.json'),\n  appSrc: resolveApp('src'),\n  testsSetup: resolveApp('src/setupTests.js'),\n  appNodeModules: resolveApp('node_modules'),\n  ownNodeModules: resolveApp('node_modules'),\n  nodePaths\n};\n\n\n// config before publish: we're in ./packages/react-scripts/config/\nif (__dirname.indexOf(path.join('packages', 'react-scripts', 'config')) !== -1) {\n  module.exports = {\n    appBuild: resolveOwn('../../../build'),\n    appPublic: resolveOwn('../template/public'),\n    appHtml: resolveOwn('../template/public/index.html'),\n    appIndexJs: resolveOwn('../template/src/index.js'),\n    appPackageJson: resolveOwn('../package.json'),\n    appSrc: resolveOwn('../template/src'),\n    testsSetup: resolveOwn('../template/src/setupTests.js'),\n    appNodeModules: resolveOwn('../node_modules'),\n    ownNodeModules: resolveOwn('../node_modules'),\n    nodePaths\n  };\n}\n"]}